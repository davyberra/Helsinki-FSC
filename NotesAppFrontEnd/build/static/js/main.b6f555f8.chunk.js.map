{"version":3,"sources":["Note.js","services/notes.js","Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","margin","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","Notification","message","map","find","n","changedNote","returnedNote","catch","error","setTimeout","fileter","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"iNAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCRpCK,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCG5BK,EAhBA,WAQb,OACE,sBAAKC,MARa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,GACVC,OAAQ,QAIR,UACE,uBACA,+DC0GSC,EA/GH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAC5B,IADF,mBAAOG,EAAP,KAAgBC,EAAhB,KAGA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,0BAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAYAC,qBAAU,WACRC,IAEGxB,MAAK,SAAAyB,GACJT,EAASS,QAEZ,IACHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IAqBMC,EAAcV,EAChBJ,EACAA,EAAMe,QAAO,SAAAxC,GAAI,OAAIA,EAAKG,aAsBxBsC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKtC,UAAU,QAAf,SACGsC,KAKP,OACE,gCACE,uCACA,cAACD,EAAD,CAAcC,QAASX,IACvB,8BACE,yBAAQzB,QAAS,kBAAMwB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGU,EAAYI,KAAI,SAAA3C,GAAI,OACnB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBA9CD,SAACc,GAC1B,IAAMf,EAAOyB,EAAMmB,MAAK,SAAAC,GAAC,OAAIA,EAAE9B,KAAOA,KAChC+B,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD+B,EACUnB,EAAI+B,GACXpC,MAAK,SAAAqC,GACJrB,EAASD,EAAMkB,KAAI,SAAA3C,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO+C,SAEpDC,OAAM,SAAAC,GACLjB,EAAgB,SAAD,OACJhC,EAAKK,QADD,sCAGf6C,YAAW,WACTlB,EAAgB,QACf,KACHN,EAASD,EAAM0B,SAAQ,SAAAN,GAAC,OAAIA,EAAE9B,KAAOA,SA8BTqC,CAAmBpD,EAAKe,MAF3Cf,EAAKe,SAMhB,uBAAMsC,SA3EM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBnD,QAASsB,EACT8B,MAAM,IAAIC,MAAOC,cACjBxD,UAAWyD,KAAKC,SAAW,IAG7B3B,EACUsB,GACP9C,MAAK,SAAAqC,GACJrB,EAASD,EAAMqC,OAAOf,IACtBnB,EAAW,QA+Db,UACE,uBAAOmC,MAAOpC,EAASqC,SA5DJ,SAACV,GAExB1B,EAAW0B,EAAMW,OAAOF,UA2DpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,QC5GNC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b6f555f8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}  \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note;","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16,\r\n    margin: 'auto'\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Davy Berra 2021</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import './App.css';\r\nimport Note from './Note.js';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport noteService from './services/notes'\r\nimport Footer from './Footer.js';\r\n\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState(\r\n    ''\r\n  )\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n\r\n  const hook = () => {\r\n    console.log('effect')\r\n    axios\r\n      .get('https://pure-thicket-78695.herokuapp.com/api/notes')\r\n      .then(response => {\r\n        console.log('promise fulfilled')\r\n        setNotes(response.data)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.fileter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n\n"],"sourceRoot":""}